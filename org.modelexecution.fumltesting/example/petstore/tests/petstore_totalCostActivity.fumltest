import Model.structure.*
import Model.behavior.*

scenario TestData[
	object cart : Cart{}
	object product : Product{}
	object item : Item{Item.unitCost = 100;}
	object cartItem : CartItem{CartItem.quantity=5;}
	link cartItem_item{cartItem_item.cartItem=cartItem; cartItem_item.item=item;}
]

test totalCostTest activity TotalCostActivity on TestData.cartItem{
	var cost = TotalCostActivity.totalCost;
	var cartItem = TotalCostActivity.self.result;
	var unitCost = TotalCostActivity.getUnitCost.unitCost;
	var quantity = TotalCostActivity.getQuantity.result;
	
	assertOrder TotalCostActivity.initial, TotalCostActivity.self, TotalCostActivity.getUnitCost, 
		TotalCostActivity.getQuantity, TotalCostActivity.calculateTotalCost, TotalCostActivity.final;
	
	assertState always before TotalCostActivity.self{
		cartItem = null;
	}
	assertState exactly before TotalCostActivity.self{
		cartItem = null;
	}
	assertState always after TotalCostActivity.self{
		cartItem != null;
	}
	assertState exactly after TotalCostActivity.self{
		cartItem != null;
	}
	
	assertState always before TotalCostActivity.getUnitCost{
		cartItem != null;
		unitCost = null;
	}
	assertState exactly before TotalCostActivity.getUnitCost{
		cartItem != null;
		unitCost = null;
	}
	assertState always after TotalCostActivity.getUnitCost{
		cartItem != null;
		unitCost != null;
		unitCost = 100;
	}
	assertState exactly after TotalCostActivity.getUnitCost{
		cartItem != null;
		unitCost != null;
		unitCost = 100;
	}
	
	assertState always before TotalCostActivity.getQuantity{
		cartItem != null;
		quantity = null;
	}
	assertState exactly before TotalCostActivity.getQuantity{
		cartItem != null;
		quantity = null;
	}
	assertState always after TotalCostActivity.getQuantity{
		cartItem != null;
		quantity != null;
		quantity = 5;
	}
	assertState exactly after TotalCostActivity.getQuantity{
		cartItem != null;
		quantity != null;
		quantity = 5;
	}
	
	assertState always before TotalCostActivity.calculateTotalCost{
		cartItem != null;
		unitCost != null;
		unitCost = 100;
		quantity = 5;
		cost = null;
	}
	assertState exactly before TotalCostActivity.calculateTotalCost{
		cartItem != null;
		unitCost != null;
		unitCost = 100;
		quantity = 5;
		cost = null;
	}
	assertState always after TotalCostActivity.calculateTotalCost{
		cartItem != null;
		unitCost != null;
		unitCost = 100;
		quantity = 5;
		cost != null;
		cost = 500;
	}
	assertState exactly after TotalCostActivity.calculateTotalCost{
		cartItem != null;
		unitCost != null;
		unitCost = 100;
		quantity = 5;
		cost != null;
		cost = 500;
	}
}