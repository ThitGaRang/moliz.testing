import banking.structure.*

scenario BankingTestData[
	object accountTD: Account{
		Account.balance = 0;
	}
	
	object cardTD: Card{
		Card.pin = 1985;
	}
	object atmTD: ATM{}
	
	link atm_card {source atm_card.atm = atmTD; target atm_card.card = cardTD;}
	link card_account {source card_account.card = cardTD; target card_account.account = accountTD;}
]

test insertCardTest activity ATM.InsertCard(InsertCard.card = BankingTestData.cardTD) on BankingTestData.atmTD{
	assertOrder InsertCard.init, InsertCard.context, InsertCard.insertCard;
	assertState always until action InsertCard.insertCard{
		InsertCard.context.result::atm_card.card = null;
	}
	assertState always after action InsertCard.insertCard{
		InsertCard.context.result::atm_card.card = BankingTestData.cardTD;
	}
}

test removeCardTest activity ATM.RemoveCard on BankingTestData.atmTD{
	assertOrder RemoveCard.init, RemoveCard.context, RemoveCard.readCard, RemoveCard.removeCard;
	assertState always until action RemoveCard.removeCard{
		RemoveCard.context.result::atm_card.card = BankingTestData.cardTD;
	}
	assertState always after action RemoveCard.removeCard{
		RemoveCard.context.result::atm_card.card = null;
	}
}

test validatePinTrueTest activity Card.ValidatePin(ValidatePin.pin = 1985) on BankingTestData.cardTD{
	assertOrder ValidatePin.init, ValidatePin.context, ValidatePin.readPin, ValidatePin.equals;
	assertState always after action ValidatePin.equals{
		ValidatePin.result = true;
	}
}

test validatePinFalseTest activity Card.ValidatePin(ValidatePin.pin = 1980) on BankingTestData.cardTD{
	assertOrder ValidatePin.init, ValidatePin.context, ValidatePin.readPin, ValidatePin.equals;
	assertState always after action ValidatePin.equals{
		ValidatePin.result = false;
	}
}

test makeDepositTest activity Account.MakeDeposit(MakeDeposit.amount = 200) on BankingTestData.accountTD{
	assertOrder *, MakeDeposit.setNewBalance;
	assertState always after action MakeDeposit.setNewBalance{
		MakeDeposit.context.result::Account.balance = 200;
	}	
}