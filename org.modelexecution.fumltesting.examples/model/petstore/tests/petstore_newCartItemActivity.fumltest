import petstore.structure.*
import petstore.behavior.*

scenario TestData[
	object cart : Cart{}
	object product : Product{}
	object item : Item{unitCost = 100;}
	object cartItem : CartItem{quantity=5;}
	link cartItem_item{source cartItem=cartItem; target item=item;}
]

test newCartItemTest activity NewCartItemActivity(catalogItem=TestData.item, quantity=10){
	var cartItem = cartItem;
	
	assertOrder NewCartItemActivity.init, NewCartItemActivity.createCartItem, 
		NewCartItemActivity.setItem, NewCartItemActivity.setQuantity;
	
	assertState always before action NewCartItemActivity.createCartItem{cartItem = null;}
	assertState next before action NewCartItemActivity.createCartItem{cartItem = null;}
	assertState always after action NewCartItemActivity.createCartItem{cartItem != null;}
	assertState next after action NewCartItemActivity.createCartItem{cartItem != null;}
	
	assertState always before action NewCartItemActivity.setItem{cartItem::item = null;}
	assertState next before action NewCartItemActivity.setItem{cartItem::item = null;}
	assertState always after action NewCartItemActivity.setItem{cartItem::item != null;}
	assertState next after action NewCartItemActivity.setItem{cartItem::item != null;}
}